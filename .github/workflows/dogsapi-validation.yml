name: DogsAPI Validation
run-name: ${{ github.actor }} - ${{ github.event_name }} - ${{ github.ref_name }}
on:
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
    branches:
      - 'main'
  push:
    branches:
      - 'main'
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v3
      
      - name: Set Up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.24'

      # - name: Cache Go Modules
      #   uses: actions/cache@v3
      #   with:
      #     path: |
      #       ~/.cache/go-build
      #       ~/go/pkg/mod
      #     key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
      #     restore-keys: |
      #       ${{ runner.os }}-go-

      - name: Install Dependencies
        run: go mod download

      - name: Build App
        run: go build ./cmd/api/main.go

  format:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v3
      
      - name: Set Up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.24'

      - name: Check Formatting
        run: |
          fmt_result=$(gofmt -l .)
          if [ -n "$fmt_result" ]; then
              echo "The following files are not properly formatted:"
              echo "$fmt_result"
              exit 1
          fi
            
  golangci:
    name: lint
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: stable
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v7
        with:
          version: v2.0

    gitleaks:
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v4
          with:
            fetch-depth: 0
        - uses: gitleaks/gitleaks-action@v2
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
